{"version":3,"file":"static/js/901.1bb3d6e1.chunk.js","mappings":"kIACA,SAAgB,sBAAwB,2CAA2C,UAAY,+BAA+B,aAAe,kCAAkC,WAAa,iC,uCCI5L,MAoCA,GAAeA,EAAAA,EAAAA,IApCKC,IAA6B,IAA5B,YAAEC,EAAW,MAAEC,GAAOF,EACzC,MAAOG,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,IAmBzC,OAjBAC,EAAAA,EAAAA,YAAU,KACR,WACE,IACE,MAAMC,QAAiBC,EAAAA,EAAAA,GAAsBN,GAEzCK,GACFH,EAAYG,GACZN,GAAY,IAEZA,GAAY,EAEhB,CAAE,MAAOQ,GACPC,QAAQC,IAAIF,EAAMG,QACpB,CACD,EAbD,EAaI,GACH,KAGDC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAIC,sBAAsBC,UACxCJ,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAIG,eAAeD,SACvB,OAARd,QAAQ,IAARA,OAAQ,EAARA,EACGgB,MAAK,CAACC,EAAGC,IAAMD,EAAEE,WAAaD,EAAEC,aACjCC,KAAIC,IAAA,IAAC,MAAEC,EAAK,WAAEH,GAAYE,EAAA,OACzBE,EAAAA,EAAAA,MAAA,MAAqBZ,UAAWC,EAAIY,UAAUV,SAAA,EAC5CS,EAAAA,EAAAA,MAAA,QAAMZ,UAAWC,EAAIa,aAAaX,SAAA,CAAC,WAASK,EAAW,SACvDT,EAAAA,EAAAA,KAAA,QAAMC,UAAWC,EAAIc,WAAWZ,SAAEQ,MAF3BH,EAGJ,OAGP,G","sources":["webpack://star_wars/./src/components/PeoplePage/PersonFilms/PersonFilms.module.css?a814","components/PeoplePage/PersonFilms/PersonFilms.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"personFilms_container\":\"PersonFilms_personFilms_container__OPaDh\",\"list_item\":\"PersonFilms_list_item__DXOY8\",\"item_episode\":\"PersonFilms_item_episode__oWHTf\",\"item_title\":\"PersonFilms_item_title__zCOrZ\"};","import css from \"./PersonFilms.module.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { makeConcurrentRequest } from \"../../../utils/network\";\r\nimport { withErrorApi } from \"../../../hoc-helpers/withErrorApi\";\r\n\r\nconst PersonFilms = ({ setErrorApi, films }) => {\r\n  const [filmName, setFilmName] = useState([]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const response = await makeConcurrentRequest(films);\r\n\r\n        if (response) {\r\n          setFilmName(response);\r\n          setErrorApi(false);\r\n        } else {\r\n          setErrorApi(true);\r\n        }\r\n      } catch (error) {\r\n        console.log(error.message);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <div className={css.personFilms_container}>\r\n      <ul className={css.list_container}>\r\n        {filmName\r\n          ?.sort((a, b) => a.episode_id - b.episode_id)\r\n          .map(({ title, episode_id }) => (\r\n            <li key={episode_id} className={css.list_item}>\r\n              <span className={css.item_episode}>Episode {episode_id}: </span>\r\n              <span className={css.item_title}>{title}</span>\r\n            </li>\r\n          ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withErrorApi(PersonFilms);\r\n"],"names":["withErrorApi","_ref","setErrorApi","films","filmName","setFilmName","useState","useEffect","response","makeConcurrentRequest","error","console","log","message","_jsx","className","css","personFilms_container","children","list_container","sort","a","b","episode_id","map","_ref2","title","_jsxs","list_item","item_episode","item_title"],"sourceRoot":""}